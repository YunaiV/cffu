#!/bin/bash
set -eEuo pipefail
cd "$(dirname "$(readlink -f "$0")")"

BASH_BUDDY_ROOT="$(readlink -f bash-buddy)"
readonly BASH_BUDDY_ROOT
source "$BASH_BUDDY_ROOT/lib/trap_error_info.sh"
source "$BASH_BUDDY_ROOT/lib/common_utils.sh"
source "$BASH_BUDDY_ROOT/lib/java_build_utils.sh"

################################################################################
# ci build logic
################################################################################

readonly default_build_jdk_version=19
# shellcheck disable=SC2034
readonly JDK_VERSIONS=(
  8
  11
  17
  "$default_build_jdk_version"
  20
)
readonly default_jh_var_name="JAVA${default_build_jdk_version}_HOME"

# here use `install` and `-D performRelease` intended
#   to check release operations.
#
# De-activate a maven profile from command line
#   https://stackoverflow.com/questions/25201430
#
# shellcheck disable=SC2034
JVB_MVN_OPTS=(
  "${JVB_DEFAULT_MVN_OPTS[@]}"
  -DperformRelease -P'!gen-sign'
)

cd ..

########################################
# do build and test by default version jdk
########################################

[ -d "${!default_jh_var_name:-}" ] || cu::die "\$${default_jh_var_name}(${!default_jh_var_name:-}) dir is not existed!"
export JAVA_HOME="${!default_jh_var_name}"

cu::head_line_echo "build and test with Java $default_build_jdk_version: $JAVA_HOME"
jvb::mvn_cmd clean install

########################################
# test by multi-version jdk
########################################

for jdk_version in "${JDK_VERSIONS[@]}"; do
  # skip default jdk, already tested above
  [ "$jdk_version" = "$default_build_jdk_version" ] && continue

  jh_var_name="JAVA${jdk_version}_HOME"
  [ -d "${!jh_var_name:-}" ] || cu::die "\$${jh_var_name}(${!jh_var_name:-}) dir is not existed!"
  export JAVA_HOME="${!jh_var_name}"

  # just test without build
  cu::head_line_echo "test with Java $jdk_version: $JAVA_HOME"
  jvb::mvn_cmd surefire:test -Denforcer.skip
done
